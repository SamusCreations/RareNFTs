@model RareNFTs.Application.DTOs.NftDTO

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>NftDTO</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data"
              data-ajax="true"
              data-ajax-method="POST"
              data-ajax-begin="onBegin"
              data-ajax-failure="onFailure"
              data-ajax-success="onSuccess"
              data-ajax-complete="onComplete"
              asp-antiforgery="true" onsubmit="disableImageValidation()">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" disabled />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" step="0.10" min="0" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>



            <!-- Agregar campo para mostrar la image actual -->
            <div class="form-group">
                <label class="control-label">Current Image</label>
                <img id="currentImage" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Image)" class="img-thumbnail" />
            </div>


            <div class="form-group">
                <!-- Agregar evento onchange para actualizar la vista previa de la imagen -->
                <label asp-for="Image" class="control-label">New Image</label>
                <input type="file" id="imageFile" name="imageFile" class="form-control" onchange="previewImage()" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div id="loader" class="xxxx"></div>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section scripts {
    <script>
        function onBegin() {
            console.log("onBegin")
            document.getElementById("loader").className = "loading";
        }

        function onFailure(response) {
            console.log("onFailure")
            console.log(response)
            Swal.fire({
                title: "Error!",
                icon: "error",
                text: response.responseText,
                timer: 2000,
                timerProgressBar: true
            })
        }

        function onSuccess(response) {
            console.log("onSuccess")
        }

        function onComplete() {
            console.log("onComplete")
            document.getElementById("loader").className = "xxxxx";

            // // Clear field
            // document.getElementById("IdProducto").value = "";
            // document.getElementById("DescripcionProducto").value = "";
            // document.getElementById("CostoDolar").value = "";
            // document.getElementById("Precio").value = "";
            // document.getElementById("Cantidad").value = "";
            // document.getElementById("ImageFile").value = "";

            window.location.href = '/NFT';

        }
        function disableImageValidation() {
            var imageInput = document.getElementById('imageFile');
            // Eliminar atributos de validación de datos independientemente de si se ha seleccionado un archivo
            imageInput.removeAttribute('data-val');
            imageInput.removeAttribute('data-val-required');
            console.log("imagen disabled 1")
            // También podrías querer eliminar otros atributos relacionados con la validación, como data-val-filesize, etc., si existen.
        }


        // Función para desactivar temporalmente la validación del lado del cliente para el campo de imagen
        function disableImageValidation() {
            var imageInput = document.getElementById('imageFile');
            if (imageInput.files.length === 0) {
                imageInput.removeAttribute('data-val');
                imageInput.removeAttribute('data-val-required');
                console.log("imagen disabled 2")

            }
        }

        // Función para mostrar la vista previa de la nueva imagen seleccionada
        function previewImage() {
            var fileInput = document.getElementById('imageFile');
            var currentImage = document.getElementById('currentImage');
            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    currentImage.src = e.target.result;
                };
                reader.readAsDataURL(fileInput.files[0]);
            }
            // Si no se selecciona ningún archivo, mantener la imagen actual
            else {
                // No hacer nada, mantener la imagen actual
            }
        }

    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
